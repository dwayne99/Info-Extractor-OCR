[{"/home/dwayne/Desktop/PAN_textract/app/src/App.js":"1","/home/dwayne/Desktop/PAN_textract/app/src/index.js":"2","/home/dwayne/Desktop/PAN_textract/app/src/uploader.js":"3","/home/dwayne/Desktop/PAN_textract/app/src/reportWebVitals.js":"4"},{"size":528,"mtime":1606221672953,"results":"5","hashOfConfig":"6"},{"size":582,"mtime":1606231990403,"results":"7","hashOfConfig":"6"},{"size":5912,"mtime":1606314404412,"results":"8","hashOfConfig":"6"},{"size":362,"mtime":1606221672953,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1d8sn0p",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/dwayne/Desktop/PAN_textract/app/src/App.js",[],["23","24"],"/home/dwayne/Desktop/PAN_textract/app/src/index.js",["25"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Uploader from './uploader'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Uploader />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["26","27"],"/home/dwayne/Desktop/PAN_textract/app/src/uploader.js",["28","29","30","31","32"],"import React, { Component } from 'react';\nimport {Button, Form, FormGroup, Label, FormText, Input, Jumbotron} from \"reactstrap\";\nimport FileBase64 from 'react-file-base64';\n\nimport \"./uploader.css\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons'\n\nclass Uploader extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {  \n            confirmation:\"\",\n            isLoading : \"\",\n            files :\"\",\n            link: \"data:application/octet-stream,PAN%2CName%2CDOB\",\n            infoAvailable:false\n        }\n\n        this.DATA = [];\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event){\n        event.preventDefault();\n        const target = event.target;\n        const value = event.value;\n        const name = event.name;\n\n        this.setState({name:value});\n    }\n\n    async handleSubmit(event){\n        event.preventDefault();\n        // this.setState({confirmation:\"Hope you liked the Service\"});\n    }\n\n    async getFiles(files){\n        this.setState({\n            isLoading:\"Extracting the data\",\n            files:files\n        });\n\n        for(var i = 0; i < this.state.files.length; i++){\n\n            const UID = Math.round(1+Math.random() * (100000-5));\n            var data = {\n                fileExt:\"png\",\n                imageID: UID,\n                folder: UID,\n                img: this.state.files[i].base64\n            };\n\n            this.setState({confirmation:\"Wait while the file is being processed...\"})\n\n            await fetch(\"https://2vdoldu1ma.execute-api.ap-south-1.amazonaws.com/Production\",\n            {\n                method: \"POST\",\n                headers:{\n                    Accept:\"application/json\",\n                    \"content-Type\":\"application.json\",\n                },\n                body:JSON.stringify(data)\n            });\n\n            let targetImage = UID + \".png\";\n            const response = await fetch(\"https://2vdoldu1ma.execute-api.ap-south-1.amazonaws.com/Production/ocr\",\n            {\n                method: \"POST\",\n                headers:{\n                    Accept:\"application/json\",\n                    \"content-Type\":\"application.json\",\n                },\n                body:JSON.stringify(targetImage)\n            });\n\n            const OCR_text = await response.json();\n            this.DATA.push({\n                \"PAN\":OCR_text.body.pan,\n                \"name\":OCR_text.body.name,\n                \"dob\":OCR_text.body.dob,\n            })\n            this.state.link += \"%0A\"+ OCR_text.body.pan.split(' ').join('%20')+\"%2C\"+OCR_text.body.name.split(' ').join('%20')+\"%2C\" + OCR_text.body.dob.split(' ').join('%20');\n\n        }\n        this.setState({\n            confirmation:\"\",\n            infoAvailable:true\n        });\n\n        console.log(this.DATA);\n    }\n\n\n    render() {\n        const processing = this.state.confirmation;\n        return ( \n            <div className=\"row\">\n                <div className=\"col-8 offset-2\">\n                    <Form onSubmit={this.handleSubmit}>\n                        <FormGroup>\n                            <h3 className=\"text-danger\">{processing}</h3>\n                            <Jumbotron> \n                                <h3>Upload PAN card</h3>\n                            <FormText color=\"muted\">PNG,JPG,JPEG</FormText>\n                            <div className=\"form-group files color\">\n                                <FileBase64 multiple={true} onDone={this.getFiles.bind(this)}></FileBase64>\n                            </div>\n                            </Jumbotron>\n                        </FormGroup>\n\n                        {/* PAN-1 : Render this part only if theres a single PAN */}\n                        {\n                        this.state.infoAvailable && this.state.files.length==1?\n                            <div id=\"single\">   \n                                <FormGroup id=\"pan_form\" >\n                                    <Label><h6>Permanent Account Number</h6></Label>\n                                    <Input type=\"text\" name=\"pan\" id=\"pan\" required value={this.DATA[0].PAN} onChange={this.handleChange}/>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label><h6>Name</h6></Label>\n                                    <Input type=\"text\" name=\"name\" id=\"name\" required value={this.DATA[0].name} onChange={this.handleChange}/>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label><h6>Date of Birth</h6></Label>\n                                    <Input type=\"text\" name=\"dob\" id=\"dob\" required value={this.DATA[0].dob} onChange={this.handleChange}/>\n                                </FormGroup>\n                                <Button className=\"btn btn-lg btn-block xbutton\">\n                                    <a href={this.state.link}>Download</a>\n                                </Button>\n                            </div>\n                        :null\n                        }\n                        {/* End of PAN-1 */}\n\n                        {/* PAN-Multiple : Render this part only if there are multiple PANs */}\n                        {\n                        this.state.infoAvailable && this.state.files.length>1?\n                            <div id=\"multiple\"> \n                                <Button className=\"btn btn-lg btn-block xbutton\">\n                                    <a href={this.state.link}>Download</a>\n                                </Button>\n                            </div>\n                        :null\n                        }\n                        {/* End of  PAN-Multiple */}\n\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Uploader;","/home/dwayne/Desktop/PAN_textract/app/src/reportWebVitals.js",[],["33","34"],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":5,"column":8,"nodeType":"41","messageId":"42","endLine":5,"endColumn":11},{"ruleId":"35","replacedBy":"43"},{"ruleId":"37","replacedBy":"44"},{"ruleId":"39","severity":1,"message":"45","line":7,"column":10,"nodeType":"41","messageId":"42","endLine":7,"endColumn":25},{"ruleId":"39","severity":1,"message":"46","line":8,"column":10,"nodeType":"41","messageId":"42","endLine":8,"endColumn":22},{"ruleId":"39","severity":1,"message":"47","line":28,"column":15,"nodeType":"41","messageId":"42","endLine":28,"endColumn":21},{"ruleId":"39","severity":1,"message":"48","line":30,"column":15,"nodeType":"41","messageId":"42","endLine":30,"endColumn":19},{"ruleId":"49","severity":1,"message":"50","line":116,"column":76,"nodeType":"51","messageId":"52","endLine":116,"endColumn":78},{"ruleId":"35","replacedBy":"53"},{"ruleId":"37","replacedBy":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar",["55"],["56"],"'FontAwesomeIcon' is defined but never used.","'faInfoCircle' is defined but never used.","'target' is assigned a value but never used.","'name' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["55"],["56"],"no-global-assign","no-unsafe-negation"]